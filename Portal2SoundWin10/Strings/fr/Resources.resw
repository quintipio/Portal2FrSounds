<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="appdButton.Label" xml:space="preserve">
    <value>A propos de...</value>
  </data>
  <data name="appdText.Text" xml:space="preserve">
    <value>A propos de...</value>
  </data>
  <data name="bugsButton.Label" xml:space="preserve">
    <value>Bugs, Suggestions</value>
  </data>
  <data name="CopyrightContenu.Text" xml:space="preserve">
    <value>Toutes les ressources de l'application tel que les images et sons sont la propriété de Valve, et proviennent de la saga Portal. Application non officielle.
Les biographies sont des copies du contenu du site http://theportalwiki.com/wiki.
Les sons de tout les personnages proviennent du site http://theportalwiki.com/wiki.
Le fond d'écran, les sonneries et musiques proviennent du site www.thinkwithportals.com
Les icones des personnages ont été crées par Charles Wassilieff (http://charles-vous-explique.com)</value>
  </data>
  <data name="CopyrightText.Text" xml:space="preserve">
    <value>Copyright :</value>
  </data>
  <data name="DeveloppeurText.Text" xml:space="preserve">
    <value>Developpeur :</value>
  </data>
  <data name="NouveautesContenu.Text" xml:space="preserve">
    <value>version 2.0.2 :
- correction d'un bug sur les sons de Cave Johnson

version 2.0.1 :
- correction d'un bug sur les sons du processeur du savoir

version 2.0 :
- optimisations de l'application

version 1.2 : 
- Création de la version Windows 10.
- Ajout des personnages : GlaDos, Wheatley, Cave Johson, le processeur de la curiosité, le processeur du savoir inutile, le processeur de l'espace, le processeur aventurier, le processeur de la recette, la tourelle, la tourelle défaillante, l'annonceur, les sonneries et musiques
- Option pour jouer un son alétoirement
- Exportation des sons</value>
  </data>
  <data name="NouveautesText.Text" xml:space="preserve">
    <value>Nouveautées :</value>
  </data>
  <data name="rateButton.Label" xml:space="preserve">
    <value>Note l'app</value>
  </data>
  <data name="VersionText.Text" xml:space="preserve">
    <value>Version :</value>
  </data>
  <data name="bioPivot.Header" xml:space="preserve">
    <value>Biographie</value>
  </data>
  <data name="sonPivot.Header" xml:space="preserve">
    <value>Son</value>
  </data>
  <data name="sonLongPivot.Header" xml:space="preserve">
    <value>Son Long</value>
  </data>
  <data name="aleatoireButton.Label" xml:space="preserve">
    <value>Aléatoire</value>
  </data>
  <data name="exportButton.Content" xml:space="preserve">
    <value>Exporter</value>
  </data>
  <data name="APPD" xml:space="preserve">
    <value>A propos de...</value>
  </data>
  <data name="Suggest" xml:space="preserve">
    <value>Bugs, Suggestions</value>
  </data>
  <data name="sansCategorie" xml:space="preserve">
    <value>Sans Catégories</value>
  </data>
  <data name="AucunTri" xml:space="preserve">
    <value>Aucun tri</value>
  </data>
  <data name="TriParCategorie" xml:space="preserve">
    <value>Par catégorie</value>
  </data>
  <data name="TriParTemps" xml:space="preserve">
    <value>Par type de son</value>
  </data>
  <data name="organiserPar.Text" xml:space="preserve">
    <value>Organiser par :</value>
  </data>
  <data name="SonCourt" xml:space="preserve">
    <value>Son court</value>
  </data>
  <data name="SonLong" xml:space="preserve">
    <value>Son long</value>
  </data>
  <data name="toutLesSons" xml:space="preserve">
    <value>Tout les sons</value>
  </data>
</root>